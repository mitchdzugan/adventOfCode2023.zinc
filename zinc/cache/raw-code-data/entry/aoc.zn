{:merge-state {:defreferred nil, :refer-macros {"/home/mitch/Projects/adventOfCode2023.zinc/src/+.zn" "+"}, :name-alias nil, :placeholders nil, :get-dep-path {"day2" "/home/mitch/Projects/adventOfCode2023.zinc/src/aoc/day2.zn", "day4" "/home/mitch/Projects/adventOfCode2023.zinc/src/aoc/day4.zn", "day7" "/home/mitch/Projects/adventOfCode2023.zinc/src/aoc/day7.zn", "day9" "/home/mitch/Projects/adventOfCode2023.zinc/src/aoc/day9.zn", "day5" "/home/mitch/Projects/adventOfCode2023.zinc/src/aoc/day5.zn", "day6" "/home/mitch/Projects/adventOfCode2023.zinc/src/aoc/day6.zn", "day3" "/home/mitch/Projects/adventOfCode2023.zinc/src/aoc/day3.zn", "lib" "/home/mitch/Projects/adventOfCode2023.zinc/src/aoc/lib.zn", "day8" "/home/mitch/Projects/adventOfCode2023.zinc/src/aoc/day8.zn", "+" "/home/mitch/Projects/adventOfCode2023.zinc/src/+.zn", "day1" "/home/mitch/Projects/adventOfCode2023.zinc/src/aoc/day1.zn"}, :get-as-alias {"/home/mitch/Projects/adventOfCode2023.zinc/src/aoc/day4.zn" "day4", "/home/mitch/Projects/adventOfCode2023.zinc/src/aoc/day5.zn" "day5", "/home/mitch/Projects/adventOfCode2023.zinc/src/+.zn" "+", "/home/mitch/Projects/adventOfCode2023.zinc/src/aoc/day8.zn" "day8", "/home/mitch/Projects/adventOfCode2023.zinc/src/aoc/day1.zn" "day1", "/home/mitch/Projects/adventOfCode2023.zinc/src/aoc/day3.zn" "day3", "/home/mitch/Projects/adventOfCode2023.zinc/src/aoc/day7.zn" "day7", "/home/mitch/Projects/adventOfCode2023.zinc/src/aoc/lib.zn" "lib", "/home/mitch/Projects/adventOfCode2023.zinc/src/aoc/day9.zn" "day9", "/home/mitch/Projects/adventOfCode2023.zinc/src/aoc/day6.zn" "day6", "/home/mitch/Projects/adventOfCode2023.zinc/src/aoc/day2.zn" "day2"}, :exporting nil, :runtime-deps {"/home/mitch/Projects/adventOfCode2023.zinc/src/aoc/day4.zn" true, "/home/mitch/Projects/adventOfCode2023.zinc/src/aoc/day5.zn" true, "/home/mitch/Projects/adventOfCode2023.zinc/src/+.zn" true, "/home/mitch/Projects/adventOfCode2023.zinc/src/aoc/day8.zn" true, "/home/mitch/Projects/adventOfCode2023.zinc/src/aoc/day1.zn" true, "/home/mitch/Projects/adventOfCode2023.zinc/src/aoc/day3.zn" true, "/home/mitch/Projects/adventOfCode2023.zinc/src/aoc/day7.zn" true, "/home/mitch/Projects/adventOfCode2023.zinc/src/aoc/lib.zn" true, "/home/mitch/Projects/adventOfCode2023.zinc/src/aoc/day9.zn" true, "/home/mitch/Projects/adventOfCode2023.zinc/src/aoc/day6.zn" true, "/home/mitch/Projects/adventOfCode2023.zinc/src/aoc/day2.zn" true}}, :res {:code [(require ' ["./../src/aoc/day1.mjs" :as day1]) (require ' ["./../src/aoc/day2.mjs" :as day2]) (require ' ["./../src/aoc/day3.mjs" :as day3]) (require ' ["./../src/aoc/day4.mjs" :as day4]) (require ' ["./../src/aoc/day5.mjs" :as day5]) (require ' ["./../src/aoc/day6.mjs" :as day6]) (require ' ["./../src/aoc/day7.mjs" :as day7]) (require ' ["./../src/aoc/day8.mjs" :as day8]) (require ' ["./../src/aoc/day9.mjs" :as day9]) (require ' ["./../src/aoc/lib.mjs" :as lib]) (require ' ["./../src/+.mjs" :as + :refer-macros true]) (def dayModules (+/Vec day1 day2 day3 day4 day5 day6 day7 day8 day9)) (defn solve [day] (let [module (+/or {} (+/at dayModules (- day 1)))] (+/log (+/str "❄ 🎄 ❄ 🎄 ❄ 🎄 ❄ 🎄 ❄ 🎄 ❄ ")) (+/log (+/str "🎄 advent of code day " day " 🎄")) (let [input (lib/getInput day)] (+/log (+/str "❄ 🎄 part 1:🎄 ❄ 🎄 ❄ 🎄 ❄ ")) (+/log (.part1 module input)) (+/log (+/str "❄ 🎄 part 2:🎄 ❄ 🎄 ❄ 🎄 ❄ ")) (+/log (.part2 module input)) (+/log (+/str "❄ 🎄 ❄ 🎄 ❄ 🎄 ❄ 🎄 ❄ 🎄 ❄ ")) (+/log)))) (let [toSolve (lib/parseInt (+/dig js/process ["argv" 2]))] (if (and (> toSolve 0) (<= toSolve (+/size dayModules))) (solve toSolve) (+/each (fn [_ index] (solve (+ index 1))) dayModules)))], :preprocessing nil}}